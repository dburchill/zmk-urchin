/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


// Home row mods macro
// left shift causes a lot of misfirfes 
#define HRML(k1,k2,k3,k4) &kp k1  &mt LCTRL k2  &mt LALT  k3  &mt LGUI  k4
#define HRMR(k1,k2,k3,k4) &mt RGUI  k1  &mt RALT  k2  &mt RCTRL k3  &mt RSHFT k4


#define BASE 0
#define RIG  1
#define LEF  2
#define BT   3
#define NPAD 4

&mt {
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
};


/ {

	combos {
        compatible = "zmk,combos";
	
	    combo_esc {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp ESC>;
        };
    	
        combo_cut {
            bindings = <&kp LG(X)>;
            key-positions = <20 21>;
        };
        
 		combo_cpy {
            bindings = <&kp LG(C)>;
            key-positions = <21 22>;
        };
        combo_pst {
            bindings = <&kp LG(V)>;
            key-positions = <22 23>;
        };

        combo_pst_wo {
            bindings = <&kp LS(LG(V))>;
            key-positions = <22 24>;
        };
        
        combo_pst_wok {
            bindings = <&kp LA(LS(LG(V)))>;
            key-positions = <23 24>;
        };

 		combo_app_chgr {
            bindings = <&kp LG(SPACE)>;
            key-positions = <12 13>;
        };
        
        combo_lasso {
        	bindings = <&kp LG(LC(LS(N4)))>;
        	key-positions = <11 12>;
        };
        
        combo_return {
            bindings = <&kp RETURN>;
            key-positions = <32 29>;
        };
        
        combo_bspc {
            bindings = <&kp BSPC>;
            key-positions = <32 9>;
        };
    };


//   behaviors {
//        ht: hold_tap {
//            compatible = "zmk,behavior-hold-tap";
//            #binding-cells = <2>;
//            flavor = "tap-preferred";
//            tapping-term-ms = <220>;
//            quick-tap-ms = <150>;
//            require-prior-idle-ms = <100>;
//            bindings = <&kp>, <&kp>;
//        };
//    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │   P      │           
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │   ;      │            
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ /?(enter)│    
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯                          
        //                                 │ left/TAB │  SPACE   │   │   SHIFT  │right/bspc│ 
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        
         &kp Q      &kp W      &kp E      &kp R      &kp T             &kp Y      &kp U      &kp I      &kp O      &kp P
         HRML(A,        S,         D,         F)     &kp G             &kp H      HRMR(J,        K,         L,        SEMI)
         &kp Z      &kp X      &kp C      &kp V      &kp B             &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
                                     &lt LEF TAB     &lt NPAD SPACE    &kp RSHFT  &lt RIG BSPC

            >;
        };


        right_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│    1     │    2     │    3     │     4    │     5    │   │    6     │    7     │     8    │    9     │     0    │
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│      !   │    @     │   #      │    $     │    %     │   │   left   │  down    │    up    │  right   │   ;      │
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CAP word │    `~    │    ^     │    &     │    *     │   │   HOME   │ PG DN    │   PG UP  │   END    │ CAP word │
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 │          │          │   │          │          │ 
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        
        &kp N1       &kp N2      &kp N3      &kp N4     &kp N5         &kp N6      &kp N7     &kp N8     &kp N9     &kp N0
        &kp EXCL     &kp AT      &kp HASH    &kp DLLR   &kp PRCNT      &kp LEFT    &kp DOWN   &kp UP     &kp RIGHT  &kp SEMI
        &caps_word   &kp GRAVE   &kp CARET   &kp AMPS   &kp ASTRK      &kp HOME    &kp PG_DN  &kp PG_UP  &kp END    &caps_word
                                             &trans     &trans        &trans      &trans
            >;
        };


        left_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│    &     │    *     │    -     │     >    │          │   │  ^       │    &     │    *     │    (     │    )     │
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│    "     │    [     │    {     │    (     │   \      │   │  *       │  -       │  =       │    :     │   ;      │
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│    '     │    ]     │    }     │    )     │   |      │   │  &       │  _       │  +       │  │       │          │
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        
        &kp AMPS   &kp STAR   &kp MINUS   &kp GT     &trans           &kp CARET   &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR
        &kp DQT    &kp LBKT   &kp LBRC    &kp LPAR   &kp BSLH         &kp ASTRK   &kp MINUS  &kp EQUAL  &kp COLON  &kp SEMI
        &kp SQT    &kp RBKT   &kp RBRC    &kp RPAR   &kp PIPE         &kp AMPS    &kp UNDER  &kp PLUS   &kp PIPE   &trans
                                          &trans     &trans           &trans      &trans
            >;
        };

        bt_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮     ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ RESET    │          │          │          │PROFILE 0 │     │ PROFILE 2│          │          │          │  RESET   │
        //├──────────┼──────────┼──────────┼──────────┼──────────┤     ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │PROFILE 1 │     │ PROFILE 3│          │          │          │BOOTLOADER│
        //├──────────┼──────────┼──────────┼──────────┼──────────┤     ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │CLR BT ALL│ CLEAR BT │     │ PROFILE 4│          │          │          │          │
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤     ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 ╰──────────┴──────────╯     ╰──────────┴──────────╯
        
        &sys_reset   &trans     &trans    &trans         &bt BT_SEL 0     &bt BT_SEL 2  &trans     &trans     &trans    &sys_reset
        &bootloader  &trans     &trans    &trans         &bt BT_SEL 1     &bt BT_SEL 3  &trans     &trans     &trans    &bootloader
        &trans       &trans     &trans    &bt BT_CLR_ALL &bt BT_CLR       &bt BT_SEL 4  &trans     &trans     &trans    &trans
                                          &trans         &trans           &trans        &trans

            >;
        };

        npad_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│   DEL    │    1     │    2     │     3    │   0      │   │  Vol Up  │          │          │          │          │
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  ENT     │    4     │    5     │     6    │          │   │  Vol Dwn │          │          │          │          │
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │    7     │   8      │     9    │          │   │  Mute    │          │          │          │          │
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        
        &kp DEL      &kp N1     &kp N2    &kp N3     &kp N0           &kp C_VOL_UP  &trans     &trans     &trans    &trans
        &kp RETURN   &kp N4     &kp N5    &kp N6     &trans           &kp C_VOL_DN  &trans     &trans     &trans    &trans
        &trans       &kp N7     &kp N8    &kp N9     &trans           &kp C_MUTE    &trans     &trans     &trans    &trans
                                          &trans     &trans           &trans        &trans

            >;
        };
    };
};
